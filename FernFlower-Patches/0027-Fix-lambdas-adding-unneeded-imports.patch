From 59f2748467fc8f1611f9d26a4028987985e2f21e Mon Sep 17 00:00:00 2001
From: LexManos <LexManos@gmail.com>
Date: Sun, 19 Aug 2018 00:25:48 -0700
Subject: [PATCH] Fix lambdas adding unneeded imports.


diff --git a/src/org/jetbrains/java/decompiler/modules/decompiler/exps/NewExprent.java b/src/org/jetbrains/java/decompiler/modules/decompiler/exps/NewExprent.java
index 4c8bcf1..ad5bcbb 100644
--- a/src/org/jetbrains/java/decompiler/modules/decompiler/exps/NewExprent.java
+++ b/src/org/jetbrains/java/decompiler/modules/decompiler/exps/NewExprent.java
@@ -164,7 +164,7 @@ public class NewExprent extends Exprent {
     if (anonymous) {
       ClassNode child = DecompilerContext.getClassProcessor().getMapRootClasses().get(newType.value);
 
-      if (!enumConst) {
+      if (!enumConst && (!lambda || DecompilerContext.getOption(IFernflowerPreferences.LAMBDA_TO_ANONYMOUS_CLASS))) {
         String enclosing = null;
 
         if (!lambda && constructor != null) {
diff --git a/test/org/jetbrains/java/decompiler/SingleClassesTest.java b/test/org/jetbrains/java/decompiler/SingleClassesTest.java
index 06800ca..c979356 100644
--- a/test/org/jetbrains/java/decompiler/SingleClassesTest.java
+++ b/test/org/jetbrains/java/decompiler/SingleClassesTest.java
@@ -102,4 +102,5 @@ public class SingleClassesTest extends SingleClassesTestBase {
   @Test public void testPrivateClasses() { doTest("pkg/PrivateClasses"); }
   @Test public void testTryWithResources() { doTest("pkg/TestTryWithResources"); }
   @Test public void testInvertedFloatComparison() { doTest("pkg/TestInvertedFloatComparison"); }
+  @Test public void testLambdaImports() { doTest("pkg/TestLambdaImports"); }
 }
\ No newline at end of file
diff --git a/testData/classes/pkg/TestLambdaImports.class b/testData/classes/pkg/TestLambdaImports.class
new file mode 100644
index 0000000000000000000000000000000000000000..5df4b7d00e8197e4f8311719385009dcd36eed9c
GIT binary patch
literal 1182
zcmbVMT~8B16g|^I7naplphZOavS>kN!EY^!+Gr%HA4!RckJEO5h3(E}cb23-OCKO&
z;tw$XCgYvmHEqH0;LFU;oqOh-Irq-~{C)BRz<s<hVWMcDWFmv29;U`=<JuTzF*k~N
zESOltbpvGsOANUU$8*$khHPc|6T?tVwgp4J?s(#T)M<)fn>SsGSW4EU>x!0gq{mRK
z)c5%zw_Wb-+8>(x6t8N0(dC_Ho0t2u%WJ3d8!B+T-8kQD$S7!uH;(2gZHrLV;{&!j
zz6?~js!1%2!D5(*2_xmW_RApP-MSMh3pa3+q3}vd6{>*y?}XZu?J%E1rGNrW%LR;E
zSivm=w=LYkssY==8rBWmwQvvPq|HCrwa-w~si$v9ZV`##9fq08a$-QNCyCm0FWRh{
zRD}m7M)8mUywwuEVwf8M>_lE{q+OF<7<EKYWti&SZ{R!zV@C$Bd25ehKD9k&J$s0*
zK%eSHH&lYeW@SVQiiu!H+8@b&m5TlA>tL8TeVycb1|C^>j13Eyv{#EgPaN-19tb<B
z7x~V2cuUEk%P`jItqf3a<?2!%L_T%Vmgk9}=JGHUA;Yi!E=tc!D)^RrZC8Zl1X%5B
zHqxz|r!O)9-0u3~|27lK^Ra2s<E~F>Yut4kjuKS^n+!{5{Q1{?7-rAU!veLBNzWF@
zf((U4;|2YUX=XGJuN;GYp$~?OH0I*qB!TiM(6>%qr>Cz|i{Fv?e2nZ7hE6aHd_yjS
z9#sD!fD$G#RWNmtQ}}!eANdMn<p?7^L_$^~WfO$V5VA_MNw_C?hNqauWm;>+)0A@s
HGr0N(!hkZA

literal 0
HcmV?d00001

diff --git a/testData/results/TestLambdaImports.dec b/testData/results/TestLambdaImports.dec
new file mode 100644
index 0000000..4a1e473
--- /dev/null
+++ b/testData/results/TestLambdaImports.dec
@@ -0,0 +1,40 @@
+package pkg;
+
+import java.util.ArrayList;
+
+public class TestLambdaImports {
+   public static void toCollection(Object var0) {
+      (new ArrayList()).stream().forEach((var0x) -> {// 22
+         System.out.println(var0x);
+      });
+   }// 23
+}
+
+class 'pkg/TestLambdaImports' {
+   method 'lambda$toCollection$0 (Ljava/lang/String;)V' {
+      0      7
+      1      7
+      2      7
+      3      7
+      4      7
+      5      7
+      6      7
+      7      8
+   }
+
+   method 'toCollection (Ljava/lang/Object;)V' {
+      7      6
+      8      6
+      9      6
+      f      6
+      10      6
+      11      6
+      12      6
+      13      6
+      14      9
+   }
+}
+
+Lines mapping:
+22 <-> 7
+23 <-> 10
diff --git a/testData/src/pkg/TestLambdaImports.java b/testData/src/pkg/TestLambdaImports.java
new file mode 100644
index 0000000..e1c1fb1
--- /dev/null
+++ b/testData/src/pkg/TestLambdaImports.java
@@ -0,0 +1,24 @@
+/*
+ * Copyright 2000-2018 JetBrains s.r.o.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package pkg;
+
+import java.util.ArrayList;
+
+public class TestLambdaImports {
+  public static void toCollection(Object collectionFactory) {
+    (new ArrayList<String>()).stream().forEach(s -> System.out.println(s));
+  }
+}
-- 
2.17.2 (Apple Git-113)

