From 497af514fd5c868021fc9be12acac2c387f5541d Mon Sep 17 00:00:00 2001
From: RainWarrior <rainwarrior@fry.su>
Date: Wed, 14 Oct 2015 15:30:51 +0300
Subject: [PATCH 084/122] handle generic lists with multiple arguments in
 method invocations

---
 .../decompiler/exps/InvocationExprent.java    | 21 ++++++++++++-------
 1 file changed, 13 insertions(+), 8 deletions(-)

diff --git a/src/org/jetbrains/java/decompiler/modules/decompiler/exps/InvocationExprent.java b/src/org/jetbrains/java/decompiler/modules/decompiler/exps/InvocationExprent.java
index 4c4b898..f98c822 100644
--- a/src/org/jetbrains/java/decompiler/modules/decompiler/exps/InvocationExprent.java
+++ b/src/org/jetbrains/java/decompiler/modules/decompiler/exps/InvocationExprent.java
@@ -208,14 +208,19 @@ public class InvocationExprent extends Exprent {
           List<VarType> leftArgs = ((GenericType)upperBound).getArguments();
           List<VarType> rightArgs = ((GenericType)ret).getArguments();
           List<String> fparams = desc.getSignature().fparameters;
-          // trivial case only for now
-          if(leftArgs.size() == 1 && rightArgs.size() == 1 && fparams.size() == 1) {
-            VarType l = leftArgs.get(0);
-            VarType r = rightArgs.get(0);
-            if(l != null /*&& l.type == CodeConstants.TYPE_OBJECT && !l.equals(r)*/ && r.value.equals(fparams.get(0))) {
-              genericArgs.add(leftArgs.get(0));
-              //type = upperBound;
-              System.out.println("4: " + leftArgs.get(0) + " " + rightArgs.get(0) + " " + fparams.get(0));
+          if(leftArgs.size() == rightArgs.size() && rightArgs.size() == fparams.size()) {
+            for(int i = 0; i < leftArgs.size(); i++) {
+              VarType l = leftArgs.get(i);
+              VarType r = rightArgs.get(i);
+              if(l != null /*&& l.type == CodeConstants.TYPE_OBJECT && !l.equals(r)*/ && r.value.equals(fparams.get(i))) {
+                genericArgs.add(l);
+                //type = upperBound;
+                System.out.println("4: " + i + " " + l + " " + r + " " + fparams.get(i));
+              }
+              else {
+                genericArgs.clear();
+                break;
+              }
             }
           }
         }
-- 
2.21.0.windows.1

