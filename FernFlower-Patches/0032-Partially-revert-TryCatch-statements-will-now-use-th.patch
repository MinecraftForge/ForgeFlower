From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: cpw <cpw@weeksfamily.ca>
Date: Thu, 13 Aug 2015 21:45:39 -0700
Subject: [PATCH] Partially revert "TryCatch statements will now use the
 correct variable index for their exception variable." (rolled back catch
 changes)

This reverts commit 5f699acc70d8e40f758737ae88aeddecc07edc8c.

diff --git a/src/org/jetbrains/java/decompiler/modules/decompiler/stats/CatchAllStatement.java b/src/org/jetbrains/java/decompiler/modules/decompiler/stats/CatchAllStatement.java
index d5b432c4fe852fff994e03fed0398da7e22997bd..812ed10b00ba6224ef947be953bc8d88bd72e2f7 100644
--- a/src/org/jetbrains/java/decompiler/modules/decompiler/stats/CatchAllStatement.java
+++ b/src/org/jetbrains/java/decompiler/modules/decompiler/stats/CatchAllStatement.java
@@ -16,7 +16,6 @@
 package org.jetbrains.java.decompiler.modules.decompiler.stats;
 
 import org.jetbrains.java.decompiler.code.CodeConstants;
-import org.jetbrains.java.decompiler.code.cfg.BasicBlock;
 import org.jetbrains.java.decompiler.main.DecompilerContext;
 import org.jetbrains.java.decompiler.main.TextBuffer;
 import org.jetbrains.java.decompiler.main.collectors.BytecodeMappingTracer;
@@ -69,15 +68,7 @@ public class CatchAllStatement extends Statement {
       }
     }
 
-    int varIndex = -1;
-    BasicBlock block = handler.getBasichead().getBlock();
-    if (!block.getSeq().isEmpty() && block.getInstruction(0).opcode == CodeConstants.opc_astore) {
-      varIndex = block.getInstruction(0).getOperand(0);
-    }
-    else {
-      varIndex = DecompilerContext.getCounterContainer().getCounterAndIncrement(CounterContainer.VAR_COUNTER);
-    }
-    vars.add(new VarExprent(varIndex,
+    vars.add(new VarExprent(DecompilerContext.getCounterContainer().getCounterAndIncrement(CounterContainer.VAR_COUNTER),
                             new VarType(CodeConstants.TYPE_OBJECT, 0, "java/lang/Throwable"),
                             (VarProcessor)DecompilerContext.getProperty(DecompilerContext.CURRENT_VAR_PROCESSOR)));
   }
diff --git a/src/org/jetbrains/java/decompiler/modules/decompiler/stats/CatchStatement.java b/src/org/jetbrains/java/decompiler/modules/decompiler/stats/CatchStatement.java
index fda5ed373d94f875ba6450d361bda722086e03d0..8d56042e3667eb6843cdea18d01536f90ea59e50 100644
--- a/src/org/jetbrains/java/decompiler/modules/decompiler/stats/CatchStatement.java
+++ b/src/org/jetbrains/java/decompiler/modules/decompiler/stats/CatchStatement.java
@@ -60,15 +60,7 @@ public class CatchStatement extends Statement {
         stats.addWithKey(stat, stat.id);
         exctstrings.add(new ArrayList<String>(edge.getExceptions()));
 
-        int varIndex = -1;
-        BasicBlock block = stat.getBasichead().getBlock();
-        if (!block.getSeq().isEmpty() && block.getInstruction(0).opcode == CodeConstants.opc_astore) {
-          varIndex = block.getInstruction(0).getOperand(0);
-        }
-        else {
-          varIndex = DecompilerContext.getCounterContainer().getCounterAndIncrement(CounterContainer.VAR_COUNTER);
-        }
-        vars.add(new VarExprent(varIndex,
+        vars.add(new VarExprent(DecompilerContext.getCounterContainer().getCounterAndIncrement(CounterContainer.VAR_COUNTER),
                                 new VarType(CodeConstants.TYPE_OBJECT, 0, edge.getExceptions().get(0)),
                                 // FIXME: for now simply the first type. Should get the first common superclass when possible.
                                 (VarProcessor)DecompilerContext.getProperty(DecompilerContext.CURRENT_VAR_PROCESSOR)));
diff --git a/testData/results/TestClassSimpleBytecodeMapping.dec b/testData/results/TestClassSimpleBytecodeMapping.dec
index 4a2f333d257cb2a56dddd0b5ae2887537b01bd86..1a2532f0b736a3d1a2db4f7ba3645e48e419189f 100644
--- a/testData/results/TestClassSimpleBytecodeMapping.dec
+++ b/testData/results/TestClassSimpleBytecodeMapping.dec
@@ -21,8 +21,8 @@ public class TestClassSimpleBytecodeMapping {
    public void test2(String var1) {
       try {
          Integer.parseInt(var1);// 34
-      } catch (Exception var2) {// 35
-         System.out.println(var2);// 36
+      } catch (Exception var6) {// 35
+         System.out.println(var6);// 36
       } finally {
          System.out.println("Finally");// 38
       }
diff --git a/testData/results/TestTryCatchFinally.dec b/testData/results/TestTryCatchFinally.dec
index fbe5782266c4dbcdb4d5558b3173625228f71038..772a76e8a850ff853ef51acb29d82a1ba95dfee6 100644
--- a/testData/results/TestTryCatchFinally.dec
+++ b/testData/results/TestTryCatchFinally.dec
@@ -4,10 +4,10 @@ public class TestTryCatchFinally {
    public void test1(String var1) {
       try {
          System.out.println("sout1");// 24
-      } catch (Exception var2) {
+      } catch (Exception var9) {
          try {
             System.out.println("sout2");// 27
-         } catch (Exception var3) {// 28
+         } catch (Exception var8) {// 28
             ;
          }
       } finally {
@@ -28,10 +28,10 @@ public class TestTryCatchFinally {
 
    public int test(String var1) {
       try {
-         int var5 = Integer.parseInt(var1);// 51
-         return var5;
-      } catch (Exception var2) {// 52
-         System.out.println("Error" + var2);// 53
+         int var2 = Integer.parseInt(var1);// 51
+         return var2;
+      } catch (Exception var6) {// 52
+         System.out.println("Error" + var6);// 53
       } finally {
          System.out.println("Finally");// 55
       }
