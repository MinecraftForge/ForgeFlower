From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: SuperCoder79 <25208576+SuperCoder7979@users.noreply.github.com>
Date: Tue, 15 Nov 2022 13:57:49 -0500
Subject: [PATCH] Improve output of loops inside trycatch


diff --git a/src/org/jetbrains/java/decompiler/modules/decompiler/DecHelper.java b/src/org/jetbrains/java/decompiler/modules/decompiler/DecHelper.java
index b95ef0727bc66c3401161abbbcc935c88f9abd42..0286e728d8cce195ff6be89f7c8af8190713591e 100644
--- a/src/org/jetbrains/java/decompiler/modules/decompiler/DecHelper.java
+++ b/src/org/jetbrains/java/decompiler/modules/decompiler/DecHelper.java
@@ -192,6 +192,26 @@ public final class DecHelper {
     return setHandlers;
   }
 
+  public static boolean invalidHeadMerge(Statement head) {
+    // Don't build a trycatch around a loop-head if statement, as we know that DoStatement should be built first.
+    // Since CatchStatement's isHead is run after DoStatement's, we can assume that a loop was not able to be built.
+    Statement ifhead = findIfHead(head);
+
+    return ifhead != null && head.getContinueSet().contains(ifhead.getFirst());
+  }
+
+  private static Statement findIfHead(Statement head) {
+    while (head != null && head.type != Statement.StatementType.IF) {
+      if (head.type != Statement.StatementType.SEQUENCE) {
+        return null;
+      }
+
+      head = head.getFirst();
+    }
+
+    return head;
+  }
+
   public static List<Exprent> copyExprentList(List<? extends Exprent> lst) {
     List<Exprent> ret = new ArrayList<>();
     for (Exprent expr : lst) {
@@ -199,4 +219,4 @@ public final class DecHelper {
     }
     return ret;
   }
-}
\ No newline at end of file
+}
diff --git a/src/org/jetbrains/java/decompiler/modules/decompiler/stats/CatchAllStatement.java b/src/org/jetbrains/java/decompiler/modules/decompiler/stats/CatchAllStatement.java
index 499968a156b91709d769ac5867e9fa9ce6f23232..89664837c365d106d53c89fb94da9bed6b9cfc72 100644
--- a/src/org/jetbrains/java/decompiler/modules/decompiler/stats/CatchAllStatement.java
+++ b/src/org/jetbrains/java/decompiler/modules/decompiler/stats/CatchAllStatement.java
@@ -85,6 +85,10 @@ public final class CatchAllStatement extends Statement {
             return null;
           }
 
+          if (DecHelper.invalidHeadMerge(head)) {
+            return null;
+          }
+
           if (DecHelper.checkStatementExceptions(Arrays.asList(head, exc))) {
             return new CatchAllStatement(head, exc);
           }
diff --git a/src/org/jetbrains/java/decompiler/modules/decompiler/stats/CatchStatement.java b/src/org/jetbrains/java/decompiler/modules/decompiler/stats/CatchStatement.java
index 97c1d3f816dcfc21811da2097744bfe9e5747813..5444b3ce893eafbc1fac90313a1a20debcc89d0f 100644
--- a/src/org/jetbrains/java/decompiler/modules/decompiler/stats/CatchStatement.java
+++ b/src/org/jetbrains/java/decompiler/modules/decompiler/stats/CatchStatement.java
@@ -133,6 +133,10 @@ public final class CatchStatement extends Statement {
           }
         }
 
+        if (DecHelper.invalidHeadMerge(head)) {
+          return null;
+        }
+
         if (DecHelper.checkStatementExceptions(lst)) {
           return new CatchStatement(head, next, setHandlers);
         }
