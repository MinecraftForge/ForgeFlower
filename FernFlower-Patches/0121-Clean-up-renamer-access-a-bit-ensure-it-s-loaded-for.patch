From add9bf560f6db5cea287c95b2ee13575ba15c8f3 Mon Sep 17 00:00:00 2001
From: cpw <cpw@weeksfamily.ca>
Date: Mon, 23 Nov 2015 14:56:19 -0500
Subject: Clean up renamer access a bit- ensure it's loaded for inner classes


diff --git a/src/org/jetbrains/java/decompiler/main/ClassWriter.java b/src/org/jetbrains/java/decompiler/main/ClassWriter.java
index 25d01e38f0c006411e0a6c5c053b16d188b0c9a1..b90f2ec58cc54cdd9b72257824ec6ceaefbc536e 100644
--- a/src/org/jetbrains/java/decompiler/main/ClassWriter.java
+++ b/src/org/jetbrains/java/decompiler/main/ClassWriter.java
@@ -731,7 +731,7 @@ public class ClassWriter {
             buffer.append(' ');
             String parameterName = methodWrapper.varproc.getVarName(new VarVersionPair(index, 0));
             if ((flags & (CodeConstants.ACC_ABSTRACT | CodeConstants.ACC_NATIVE)) != 0) {
-                parameterName = methodWrapper.methodStruct.renamer.renameAbstractParameter(parameterName, index);
+                parameterName = methodWrapper.methodStruct.getRenamer().renameAbstractParameter(parameterName, index);
             }
             buffer.append(parameterName == null ? "param" + index : parameterName); // null iff decompiled with errors
 
diff --git a/src/org/jetbrains/java/decompiler/main/ClassesProcessor.java b/src/org/jetbrains/java/decompiler/main/ClassesProcessor.java
index 5feaf475b6e1100d40a907d1b42bb602f1db7984..e0fdaacc5d6f16c5eea148540b2c90758779deae 100644
--- a/src/org/jetbrains/java/decompiler/main/ClassesProcessor.java
+++ b/src/org/jetbrains/java/decompiler/main/ClassesProcessor.java
@@ -355,7 +355,7 @@ public class ClassesProcessor {
     node.wrapper = null;
     node.classStruct.releaseResources();
     for (StructMethod m : node.classStruct.getMethods()) {
-        m.renamer = null;
+        m.unloadRenamer();
     }
 
     for (ClassNode nd : node.nested) {
diff --git a/src/org/jetbrains/java/decompiler/modules/decompiler/vars/VarDefinitionHelper.java b/src/org/jetbrains/java/decompiler/modules/decompiler/vars/VarDefinitionHelper.java
index de4dbdc7b84cc6bcb95faa3ba05e6e2290922cf5..fcd8c64de9c7d3af4e9ce943c41dd58ced598014 100644
--- a/src/org/jetbrains/java/decompiler/modules/decompiler/vars/VarDefinitionHelper.java
+++ b/src/org/jetbrains/java/decompiler/modules/decompiler/vars/VarDefinitionHelper.java
@@ -452,7 +452,7 @@ public class VarDefinitionHelper {
       typeNames.put(e.getKey(), e.getValue().typeName());
     }
     final StructMethod current_meth = (StructMethod)DecompilerContext.getProperty(DecompilerContext.CURRENT_METHOD);
-    Map<VarVersionPair, String> renames = current_meth.renamer.rename(typeNames);
+    Map<VarVersionPair, String> renames = current_meth.getRenamer().rename(typeNames);
 
     // Stuff the parent context into enclosed child methods
     StatementIterator.iterate(root, new ExprentIterator(){
@@ -474,7 +474,7 @@ public class VarDefinitionHelper {
 
         if (child != null) {
           for (StructMethod meth : child.classStruct.getMethods()) {
-            meth.renamer.addParentContext(current_meth.renamer);
+            meth.getRenamer().addParentContext(current_meth.getRenamer());
           }
         }
         return 0;
diff --git a/src/org/jetbrains/java/decompiler/struct/StructMethod.java b/src/org/jetbrains/java/decompiler/struct/StructMethod.java
index 77fd181a17eb566fa0f0330c0c21fb08f787922f..d7ede2e3ab1f542a7223cc79e2f139d29c29cec4 100644
--- a/src/org/jetbrains/java/decompiler/struct/StructMethod.java
+++ b/src/org/jetbrains/java/decompiler/struct/StructMethod.java
@@ -61,7 +61,7 @@ public class StructMethod extends StructMember {
   private InstructionSequence seq;
   private boolean expanded = false;
   private VBStyleCollection<StructGeneralAttribute, String> codeAttributes;
-  public IVariableNameProvider renamer;
+  private IVariableNameProvider renamer;
 
   public StructMethod(DataInputFullStream in, StructClass clStruct) throws IOException {
     classStruct = clStruct;
@@ -120,11 +120,17 @@ public class StructMethod extends StructMember {
     if (containsCode && !expanded) {
       byte[] code = classStruct.getLoader().loadBytecode(this, codeFullLength);
       seq = parseBytecode(new DataInputFullStream(code), codeLength, classStruct.getPool());
-      this.renamer = DecompilerContext.getNamingFactory().createFactory(this);
+      loadRenamer();
       expanded = true;
     }
   }
 
+  private void loadRenamer() {
+    if (this.renamer == null) {
+      this.renamer = DecompilerContext.getNamingFactory().createFactory(this);
+    }
+  }
+
   public void releaseResources() throws IOException {
     if (containsCode && expanded) {
       seq = null;
@@ -408,4 +414,13 @@ public class StructMethod extends StructMember {
   public GenericMethodDescriptor getSignature() {
     return signature;
   }
+
+  public IVariableNameProvider getRenamer() {
+    loadRenamer();
+    return renamer;
+  }
+
+  public void unloadRenamer() {
+    this.renamer = null;
+  }
 }
-- 
2.28.0.windows.1

