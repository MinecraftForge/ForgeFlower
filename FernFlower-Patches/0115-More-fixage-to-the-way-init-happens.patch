From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: cpw <cpw@weeksfamily.ca>
Date: Sun, 8 Nov 2015 16:18:49 -0500
Subject: [PATCH] More fixage to the way init happens.


diff --git a/src/org/jetbrains/java/decompiler/main/DecompilerContext.java b/src/org/jetbrains/java/decompiler/main/DecompilerContext.java
index 22ab9e0fd0f4571f360492221a619f9419d8812a..f946bb46ab04b018786a72371af431d42f65cf1c 100644
--- a/src/org/jetbrains/java/decompiler/main/DecompilerContext.java
+++ b/src/org/jetbrains/java/decompiler/main/DecompilerContext.java
@@ -57,19 +57,19 @@ public class DecompilerContext {
     this.properties = properties;
   }
 
-  public static void initContext(Map<String, Object> propertiesCustom) {
+  public static void initContext(Map<String, Object> propertiesCustom, IFernflowerLogger logger) {
     Map<String, Object> properties = new HashMap<String, Object>(IFernflowerPreferences.DEFAULTS);
     if (propertiesCustom != null) {
       properties.putAll(propertiesCustom);
     }
     currentContext.set(new DecompilerContext(properties));
+    setLogger(logger);
     // Default a no-op renamer factory if none is provided
     if (DecompilerContext.getProperty(RENAMER_FACTORY) != null) {
       try {
         currentContext.get().renamerFactory = Class.forName((String) DecompilerContext.getProperty(RENAMER_FACTORY)).asSubclass(IVariableNamingFactory.class).newInstance();
       } catch (Exception e) {
-        e.printStackTrace();
-        System.err.println("Error loading renamer factory class");
+        getLogger().writeMessage("Error loading renamer factory class", e);
       }
     }
     if (DecompilerContext.getNamingFactory() == null) {
diff --git a/src/org/jetbrains/java/decompiler/main/Fernflower.java b/src/org/jetbrains/java/decompiler/main/Fernflower.java
index 8319da8a08838b77508269bf44fe2209bcf4a328..320e250ce1fe0eeca0194b296a3944cc710127bc 100644
--- a/src/org/jetbrains/java/decompiler/main/Fernflower.java
+++ b/src/org/jetbrains/java/decompiler/main/Fernflower.java
@@ -41,10 +41,8 @@ public class Fernflower implements IDecompiledData {
 
   public Fernflower(IBytecodeProvider provider, IResultSaver saver, Map<String, Object> options, IFernflowerLogger logger) {
     structContext = new StructContext(saver, this, new LazyLoader(provider));
-    DecompilerContext.setLogger(logger);
-    DecompilerContext.initContext(options);
+    DecompilerContext.initContext(options,logger);
     DecompilerContext.setCounterContainer(new CounterContainer());
-    DecompilerContext.setLogger(logger);
 
     if (DecompilerContext.getOption(IFernflowerPreferences.INCLUDE_ENTIRE_CLASSPATH)) {
       addAllClasspath();
