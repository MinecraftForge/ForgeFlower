From 67a6f1d47bd5780221f7a545e899430cfc82e9be Mon Sep 17 00:00:00 2001
From: cpw <cpw@weeksfamily.ca>
Date: Sat, 8 Aug 2015 17:22:07 -0400
Subject: [PATCH 026/122] Change to track the varversionpair in the "oldnames"
 table. Track if we have an lvt entry when generating names and trust it's
 name exactly.

---
 .../decompiler/vars/LocalVariableTable.java     |  2 +-
 .../modules/decompiler/vars/VarProcessor.java   | 17 +++++++++--------
 .../decompiler/vars/VarVersionsProcessor.java   |  8 ++++----
 3 files changed, 14 insertions(+), 13 deletions(-)

diff --git a/src/org/jetbrains/java/decompiler/modules/decompiler/vars/LocalVariableTable.java b/src/org/jetbrains/java/decompiler/modules/decompiler/vars/LocalVariableTable.java
index 027e816..99025a5 100644
--- a/src/org/jetbrains/java/decompiler/modules/decompiler/vars/LocalVariableTable.java
+++ b/src/org/jetbrains/java/decompiler/modules/decompiler/vars/LocalVariableTable.java
@@ -64,7 +64,7 @@ private Map<Integer, List<LVTVariable>> mapLVT;
     for (LVTVariable lvt : allLVT) {
       Integer idx = versions.get(lvt.index);
       if (idx == null)
-        idx = 0;
+        idx = 1;
       else
         idx++;
       versions.put(lvt.index, idx);
diff --git a/src/org/jetbrains/java/decompiler/modules/decompiler/vars/VarProcessor.java b/src/org/jetbrains/java/decompiler/modules/decompiler/vars/VarProcessor.java
index 07b5398..a2a79f5 100644
--- a/src/org/jetbrains/java/decompiler/modules/decompiler/vars/VarProcessor.java
+++ b/src/org/jetbrains/java/decompiler/modules/decompiler/vars/VarProcessor.java
@@ -34,7 +34,7 @@ public class VarProcessor {
 private LocalVariableTable lvt;
 
   public void setVarVersions(RootStatement root) {
-    Map<Integer, Integer> mapOriginalVarIndices = null;
+    Map<Integer, VarVersionPair> mapOriginalVarIndices = null;
     if (varVersions != null) {
         mapOriginalVarIndices = varVersions.getMapOriginalVarIndices();
     }
@@ -57,7 +57,7 @@ private LocalVariableTable lvt;
       return;
     }
 
-    Map<Integer, Integer> mapOriginalVarIndices = varVersions.getMapOriginalVarIndices();
+    Map<Integer, VarVersionPair> mapOriginalVarIndices = varVersions.getMapOriginalVarIndices();
 
     List<VarVersionPair> listVars = new ArrayList<VarVersionPair>(mapVarNames.keySet());
     Collections.sort(listVars, new Comparator<VarVersionPair>() {
@@ -72,18 +72,19 @@ private LocalVariableTable lvt;
     for (VarVersionPair pair : listVars) {
       String name = mapVarNames.get(pair);
 
-      Integer index = mapOriginalVarIndices.get(pair.var);
-      if (index != null) {
-        VarVersionPair key = new VarVersionPair(index.intValue(), pair.version);
+      VarVersionPair key = mapOriginalVarIndices.get(pair.var);
+      boolean lvtName = false;
+      if (key != null) {
         if (mapDebugVarNames.containsKey(key)) {
           name = mapDebugVarNames.get(key);
+          lvtName = true;
         }
       }
 
       Integer counter = mapNames.get(name);
       mapNames.put(name, counter == null ? counter = new Integer(0) : ++counter);
 
-      if (counter > 0) {
+      if (counter > 0 && !lvtName) {
         name += String.valueOf(counter);
       }
 
@@ -138,8 +139,8 @@ public LocalVariableTable getLVT() {
 }
 
 public int getRemapped(int index) {
-    Integer res = varVersions.getMapOriginalVarIndices().get(index);
+    VarVersionPair res = varVersions.getMapOriginalVarIndices().get(index);
     if (res == null) return index;
-    return res;
+    return res.var;
 }
 }
diff --git a/src/org/jetbrains/java/decompiler/modules/decompiler/vars/VarVersionsProcessor.java b/src/org/jetbrains/java/decompiler/modules/decompiler/vars/VarVersionsProcessor.java
index 0de789a..eae4cba 100644
--- a/src/org/jetbrains/java/decompiler/modules/decompiler/vars/VarVersionsProcessor.java
+++ b/src/org/jetbrains/java/decompiler/modules/decompiler/vars/VarVersionsProcessor.java
@@ -34,7 +34,7 @@ import java.util.Map.Entry;
 
 public class VarVersionsProcessor {
 
-  private Map<Integer, Integer> mapOriginalVarIndices = new HashMap<Integer, Integer>();
+  private Map<Integer, VarVersionPair> mapOriginalVarIndices = new HashMap<Integer, VarVersionPair>();
   private VarTypeProcessor typeProcessor;
 
   public void setVarVersions(RootStatement root) {
@@ -232,7 +232,7 @@ public class VarVersionsProcessor {
     CounterContainer counters = DecompilerContext.getCounterContainer();
 
     final Map<VarVersionPair, Integer> mapVarPaar = new HashMap<VarVersionPair, Integer>();
-    Map<Integer, Integer> mapOriginalVarIndices = new HashMap<Integer, Integer>();
+    Map<Integer, VarVersionPair> mapOriginalVarIndices = new HashMap<Integer, VarVersionPair>();
     mapOriginalVarIndices.putAll(this.mapOriginalVarIndices);
 
     // map var-version pairs on new var indexes
@@ -259,7 +259,7 @@ public class VarVersionsProcessor {
         }
 
         mapVarPaar.put(pair, newIndex);
-        mapOriginalVarIndices.put(newIndex, pair.var);
+        mapOriginalVarIndices.put(newIndex, pair);
       }
     }
 
@@ -316,7 +316,7 @@ public class VarVersionsProcessor {
     typeProcessor.getMapFinalVars().put(pair, finalType);
   }
 
-  public Map<Integer, Integer> getMapOriginalVarIndices() {
+  public Map<Integer, VarVersionPair> getMapOriginalVarIndices() {
     return mapOriginalVarIndices;
   }
 }
-- 
2.21.0.windows.1

